{"name":"tar","version":"2.1.1","description":"Installs tar and two resources to manage remote tar packages","long_description":"# tar Cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/tar.svg?branch=master)](https://travis-ci.org/chef-cookbooks/tar) [![Cookbook Version](https://img.shields.io/cookbook/v/tar.svg)](https://supermarket.chef.io/cookbooks/tar)\n\nInstalls tar and includes resources for managing remote tar files. `tar_package` handles remote source package compilation. `tar_extract` handles retrieving remote tar files and extracting them locally.\n\n## Resources\n\n### tar_package\n\nA `tar_package` LWRP provides an easy way to download remote files and compile and install them. This only works for the most basic Autoconf programs that can do `./configure && make && make install`.\n\n#### Actions\n\n- :install: Installs the package\n\n#### Properties\n\n- source: name attribute. The source remote URL.\n- prefix: Directory to be used as the `--prefix` configure flag.\n- source_directory: Directory to which source files are download.\n- creates: A file this command creates - if the file exists, the command will not be run.\n- configure_flags: Array of additional flags to be passed to `./configure`.\n- archive_name: Specify a different name for the downloaded archive. Use it if the directory name inside the tar file is different than the name defined in the URL. Additionally, `tar_package` supports most `remote_file` [attributes](https://docs.chef.io/chef/resources.html#remote-file).\n\n#### Example\n\n```\ntar_package 'http://pgfoundry.org/frs/download.php/1446/pgpool-3.4.1.tar.gz' do\n  prefix '/usr/local'\n  creates '/usr/local/bin/pgpool'\nend\n```\n\nThis will download, compile, and install the package from the given URL and install it into /usr/local.\n\n### tar_extract\n\nA `tar_extract` LWRP provides an easy way to download remote tar files and extract them to a local directory.\n\n#### Actions\n\n- :extract: Extracts the tar file from a url\n- :extract_local: Extracts the tar file from a local file path\n\n#### Properties\n\n- source: name attribute. The source remote URL.\n- target_dir: Directory to extract into, e.g. tar xzf -C (target_dir)\n- download_dir: Directory to which tarball is downloaded (defaults to chef cache which requires root `group` and `user`).\n- creates: A file this command creates - if the file exists, the command will not be run.\n- compress_char: Flag for compression type, such as `z` for `gzip`. `man tar` for options.\n- tar_flags: Array of additional flags to be passed to tar xzf command.\n- group: Group name or group ID to extract the archive under. If set to non-root group, point to a `download_dir` the group has permission to access.\n- user: User name or user ID to extract the archive under. If set to non-root user, point to a `download_dir` the user has permission to access. Additionally, `tar_extract` supports most `remote_file` [attributes](https://docs.chef.io/chef/resources.html#remote-file).\n\n#### Example\n\n```\ntar_extract 'http://dev.mycoderepo.com/artifacts/mycode-1.2.3.tar.gz' do\n  target_dir '/opt/myapp/mycode'\n  creates '/opt/myapp/mycode/lib'\n  tar_flags [ '-P', '--strip-components 1' ]\nend\n```\n\nThis will download the tarball to cache, extract the contents to /opt/myapp/mycode, use the file '/opt/myapp/mycode/lib' to determine idempotency, and pass both '-P' and '--strip-components 1' flags to the tar xzf command.\n\n```\ntar_extract '/tmp/mycode-1.2.3.tar.gz' do\n  action :extract_local\n  target_dir '/opt/myapp/mycode'\n  creates '/opt/myapp/mycode/lib'\nend\n```\n\nThis will extract the contents of /tmp/mycode-1.2.3.tar.gz to /opt/myapp/mycode and use the file '/opt/myapp/mycode/lib' to determine idempotency.\n\n## ChefSpec Matchers\n\nChefSpec matchers are defined for tar_package and tar_extract.\n\n## LICENSE AND AUTHOR\n\nAuthor:: Nathan L Smith ([nathan@cramerdev.com](mailto:nathan@cramerdev.com)) Author:: George Miranda ([gmiranda@chef.io](mailto:gmiranda@chef.io)) Author:: Mark Van de Vyver ([mark@@taqtiqa.com](mailto:mark@@taqtiqa.com))\n\nCopyright 2011, Cramer Development, Inc. Copyright 2011, Opscode, Inc. Copyright 2013, TAQTIQA LLC.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\n```\nhttp://www.apache.org/licenses/LICENSE-2.0\n```\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache-2.0","platforms":{"ubuntu":">= 0.0.0","debian":">= 0.0.0","redhat":">= 0.0.0","centos":">= 0.0.0","suse":">= 0.0.0","opensuse":">= 0.0.0","opensuseleap":">= 0.0.0","scientific":">= 0.0.0","oracle":">= 0.0.0","amazon":">= 0.0.0","zlinux":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/chef-cookbooks/tar","issues_url":"https://github.com/chef-cookbooks/tar/issues","chef_version":[[">= 12.7"]],"ohai_version":[]}